{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\julia\\\\bc\\\\react_recipedirectory\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\julia\\\\bc\\\\react_recipedirectory\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\julia\\\\bc\\\\react_recipedirectory\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\julia\\\\bc\\\\react_recipedirectory\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\julia\\\\bc\\\\react_recipedirectory\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\julia\\\\bc\\\\react_recipedirectory\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // import './style.css';\n\nvar DirectoryView = function DirectoryView(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(SearchForm, {\n    searchValFromSearchFormProp: props.searchValFromDirectoryView,\n    handleChange: props.handleChange,\n    selectRecipes: props.selectedRecipes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), props.recipeList.map(function (recipe) {\n    return React.createElement(RecipeCard, {\n      name: recipe.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    });\n  }));\n};\n\nvar SearchForm = function SearchForm(props) {\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: props.searchValFromSearchFormProp,\n    onChange: props.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: props.selectRecipes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Search\"));\n};\n\nvar RecipeCard = function RecipeCard(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"recipe-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.name, \" \"));\n}; // const DetailView = (props) => (\n//     <div>\n//         {props.name}\n//         <div className=\"recipe-ingredients\">\n//             <h1>Ingredients:</h1>\n//             {props.ingredients.map(ingredient => <p>{ingredient}</p>)}\n//         </div>\n//         <ul className=\"recipe-instructions\">\n//             <h1>Instructions:</h1>\n//             {props.instructions.map(instruction => <li>{instruction}</li>)}\n//         </ul>\n//     </div>\n// );\n\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      recipeList: [{\n        id: 1,\n        name: 'Fried Rice',\n        ingredients: ['cooked rice', 'oil', 'onion', 'carrot', 'potato', 'egg', 'peas'],\n        instructions: ['Dice vegetables into evenly-sized squares.', 'In large saute pan, heat 1 tbsp of oil over medium heat.', 'Cook all vegetables (except peas) for 10 minutes or until al dente, stirring often.', 'Stir in peas.']\n      }, {\n        id: 2,\n        name: 'recipe-b',\n        ingredients: ['turkey', 'mustard', 'greens', 'celery', 'potato'],\n        instructions: ['pre-heat over to 350', 'tickle the turkey', 'cut some celery']\n      }, {\n        id: 3,\n        name: 'recipe-c',\n        ingredients: ['turkey', 'mustard', 'greens', 'celery', 'potato'],\n        instructions: ['pre-heat over to 350', 'tickle the turkey', 'cut some celery']\n      }, {\n        id: 4,\n        name: 'recipe-d',\n        ingredients: ['turkey', 'mustard', 'greens', 'celery', 'potato'],\n        instructions: ['pre-heat over to 350', 'tickle the turkey', 'cut some celery']\n      }, {\n        id: 5,\n        name: 'recipe-e',\n        ingredients: ['turkey', 'mustard', 'greens', 'celery', 'potato'],\n        instructions: ['pre-heat over to 350', 'tickle the turkey', 'cut some celery']\n      }],\n      searchVal: '',\n      selectedRecipes: [] // viewRecipe: 0\n\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        searchVal: event.target.value\n      });\n    };\n\n    _this.selectRecipes = function (event) {\n      event.preventDefault();\n\n      var filteredRecipes = _this.state.recipeList.filter(function (recipe) {\n        return recipe.name.includes(_this.state.searchVal);\n      });\n\n      _this.setState({\n        recipeList: filteredRecipes\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(DirectoryView, {\n        recipeList: this.state.recipeList,\n        searchValFromDirectoryView: this.state.searchVal,\n        handleChange: this.handleChange,\n        selectedRecipes: this.selectRecipes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\n;\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["c:\\Users\\julia\\bc\\react_recipedirectory\\src\\index.js"],"names":["React","ReactDOM","DirectoryView","props","searchValFromDirectoryView","handleChange","selectedRecipes","recipeList","map","recipe","name","SearchForm","searchValFromSearchFormProp","selectRecipes","RecipeCard","App","state","id","ingredients","instructions","searchVal","event","setState","target","value","preventDefault","filteredRecipes","filter","includes","Component","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './style.css';\n\nconst DirectoryView = (props) => (\n    <div>\n        <SearchForm searchValFromSearchFormProp={props.searchValFromDirectoryView} handleChange={props.handleChange} selectRecipes={props.selectedRecipes} />\n        {props.recipeList.map(recipe => <RecipeCard name={recipe.name} />)}\n    </div>\n);\n\nconst SearchForm = (props) => (\n    <form>\n        <input value={props.searchValFromSearchFormProp} onChange={props.handleChange} />\n        <button onClick={props.selectRecipes}>Search</button>\n    </form>\n);\n\nconst RecipeCard = (props) => (\n    <div>\n        <p className='recipe-name'>{props.name} </p>\n    </div>\n);\n\n// const DetailView = (props) => (\n//     <div>\n//         {props.name}\n//         <div className=\"recipe-ingredients\">\n//             <h1>Ingredients:</h1>\n//             {props.ingredients.map(ingredient => <p>{ingredient}</p>)}\n//         </div>\n//         <ul className=\"recipe-instructions\">\n//             <h1>Instructions:</h1>\n//             {props.instructions.map(instruction => <li>{instruction}</li>)}\n//         </ul>\n//     </div>\n// );\n\nclass App extends React.Component {\n\n    state = {\n        recipeList: [\n            {\n                id: 1,\n                name: 'Fried Rice',\n                ingredients: ['cooked rice', 'oil', 'onion', 'carrot', 'potato', 'egg', 'peas'],\n                instructions:\n                    [\n                        'Dice vegetables into evenly-sized squares.',\n                        'In large saute pan, heat 1 tbsp of oil over medium heat.',\n                        'Cook all vegetables (except peas) for 10 minutes or until al dente, stirring often.',\n                        'Stir in peas.'\n                    ]\n            },\n            {\n                id: 2,\n                name: 'recipe-b',\n                ingredients: ['turkey', 'mustard', 'greens', 'celery', 'potato'],\n                instructions: ['pre-heat over to 350', 'tickle the turkey', 'cut some celery']\n            },\n            {\n                id: 3,\n                name: 'recipe-c',\n                ingredients: ['turkey', 'mustard', 'greens', 'celery', 'potato'],\n                instructions: ['pre-heat over to 350', 'tickle the turkey', 'cut some celery']\n            },\n            {\n                id: 4,\n                name: 'recipe-d',\n                ingredients: ['turkey', 'mustard', 'greens', 'celery', 'potato'],\n                instructions: ['pre-heat over to 350', 'tickle the turkey', 'cut some celery']\n            },\n            {\n                id: 5,\n                name: 'recipe-e',\n                ingredients: ['turkey', 'mustard', 'greens', 'celery', 'potato'],\n                instructions: ['pre-heat over to 350', 'tickle the turkey', 'cut some celery']\n            }\n        ],\n\n        searchVal: '',\n\n        selectedRecipes: [],\n\n        // viewRecipe: 0\n    };\n\n    handleChange = (event) => {\n        this.setState({ searchVal: event.target.value });\n    };\n\n    selectRecipes = (event) => {\n        event.preventDefault();\n        const filteredRecipes = this.state.recipeList.filter(recipe => recipe.name.includes(this.state.searchVal));\n        this.setState({ recipeList: filteredRecipes });\n    };\n\n    render() {\n        return (\n            <div>\n                <DirectoryView\n                    recipeList={this.state.recipeList}\n                    searchValFromDirectoryView={this.state.searchVal}\n                    handleChange={this.handleChange}\n                    selectedRecipes={this.selectRecipes}\n                />\n                {/* <DetailView\n                    name={this.state.recipeList[this.state.viewRecipe].name}\n                    ingredients={this.state.recipes[this.state.viewRecipe].ingredients}\n                    instructions={this.state.recipes[this.state.viewRecipe].instructions}\n                /> */}\n            </div>\n        )\n    };\n};\n\nReactDOM.render(<App />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}